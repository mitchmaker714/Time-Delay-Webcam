import cv2
import numpy as np
from collections import deque

# Set the time delay in seconds
time_delay = 60

# Initialize the video capture with the correct camera index (usually 0 for primary USB webcam)
cap = cv2.VideoCapture(0)  # Change this index if needed

# Verify if the webcam was opened correctly
if not cap.isOpened():
    print("Error: Could not open webcam.")
    exit()

# Get the frame rate of the webcam
fps = cap.get(cv2.CAP_PROP_FPS)
if fps == 0:
    fps = 30  # Default FPS if not available
frame_delay = int(fps * time_delay)

# Create a deque to store frames for the delay
frame_queue = deque(maxlen=frame_delay)

while True:
    # Capture frame-by-frame
    ret, frame = cap.read()

    if not ret:
        break

    # Add the current frame to the deque
    frame_queue.append(frame)

    # If the deque is filled, get the oldest frame for delayed display
    if len(frame_queue) == frame_delay:
        delayed_frame = frame_queue.popleft()
        cv2.imshow('Delayed Video', delayed_frame)
    else:
        # Display black frames until the delay period is reached
        black_frame = np.zeros_like(frame)
        cv2.imshow('Delayed Video', black_frame)

    # Break the loop on 'q' key press
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the webcam and close windows
cap.release()
cv2.destroyAllWindows()
